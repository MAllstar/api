(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{480:function(t,e,s){"use strict";s.r(e);var a=s(0),n=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("Block",[s("h1",{attrs:{id:"authentication"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#authentication"}},[t._v("#")]),t._v(" Authentication")]),t._v(" "),s("h2",{attrs:{id:"generate-api-key"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#generate-api-key"}},[t._v("#")]),t._v(" Generate API key")]),t._v(" "),s("p",[t._v("Before calling the private API interface, the API key of the account needs to be\ngenerated to verify the identity. You can log in on the website and generate it in\n[account management] - > [APIv4 keys], or click "),s("a",{attrs:{href:"https://www.gateio.ch/myaccount/apiv4keys",target:"_blank",rel:"noopener noreferrer"}},[t._v("here"),s("OutboundLink")],1),t._v("\nto generate API keys.")]),t._v(" "),s("p",[t._v("Each account can create 5 API keys, and the permission configuration of each key is independent of each other.\nIt is recommended to set a note name for each key to indicate its purpose.")]),t._v(" "),s("p",[s("strong",[s("code",[t._v("Key")])]),t._v(" Access Key"),s("br"),t._v(" "),s("strong",[s("code",[t._v("Secret Key")])]),t._v(" The key used for signature authentication encryption")]),t._v(" "),s("p",[t._v("Besides, you can attach an IP whitelist, which\nrequires the server only accept requests from specified IPs. Each key can have at most\n20 IPs formatted in IPv4(not supporting IP range though). If IP whitelist is not set,\nthe server will skip client IP validation.")]),t._v(" "),s("p",[t._v("Each user can create at most 5 keys with separate permissions. It is recommended\nto set a name for key denoting how the key will be used.")]),t._v(" "),s("aside",{staticClass:"notice"},[t._v("\nNote: If the key is named with `spot` or `futures`, then it could be the default name\nafter APIv4 migration. For details refer to *About APIv4 key improvement* section\n")]),t._v(" "),s("p",[t._v("Created key can also be updated or deleted, but any modification could take effect\nin at most 5 minutes.")]),t._v(" "),s("p",[t._v("One more thing to notice that futures TestNet trading is a separate environment from\nfutures real trading. Real trading API keys cannot be used in TestNet. If you\nwant to test futures API with TestNet, you need to log into the console to generate\nTestNet API keys(in "),s("em",[t._v('"Futures TestNet APIKeys"')]),t._v(" tab on "),s("em",[t._v('"APIv4Keys"')]),t._v(" page).\nMaking futures requests are identical between real and TestNet trading, with the only\nexceptions are different base URLs and different API keys.")]),t._v(" "),s("h2",{attrs:{id:"apiv4-permissions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#apiv4-permissions"}},[t._v("#")]),t._v(" APIv4 Permissions")]),t._v(" "),s("p",[t._v("When creating a Key, you can configure whether to enable spot, margin, contract, wallet, or withdrawal permissions for the Key,\nand whether to enable read-write or read-only permissions.")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("Products")]),t._v(" "),s("th",[t._v("Permissions")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("code",[t._v("spot/margin")])]),t._v(" "),s("td",[s("code",[t._v("Read-only")]),t._v(" query orders "),s("code",[t._v("Read-write")]),t._v(" query orders & place orders")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("perpetual contract")])]),t._v(" "),s("td",[s("code",[t._v("Read-only")]),t._v(" query orders "),s("code",[t._v("Read-write")]),t._v(" query orders & place orders")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("delivery contract")])]),t._v(" "),s("td",[s("code",[t._v("Read-only")]),t._v(" query orders "),s("code",[t._v("Read-write")]),t._v(" query orders & place orders")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("wallet")])]),t._v(" "),s("td",[s("code",[t._v("Read-only")]),t._v(" Query for withdrawal transfer records "),s("code",[t._v("Read-write")]),t._v(" Query for account records & fund transfers")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("withdrawal")])]),t._v(" "),s("td",[s("code",[t._v("Read-only")]),t._v(" Query cash withdrawal records "),s("code",[t._v("Read-write")]),t._v(" Query cash withdrawal records & withdrawals")])])])]),t._v(" "),s("p",[t._v("All "),s("code",[t._v("GET")]),t._v(" operations are read requests, while others are write requests. Each permission group\ncan be set to either disabled, read-only or read-write.")]),t._v(" "),s("p",[t._v("One thing to notice that even though withdrawal API has only one operation(i.e.,\n"),s("code",[t._v("POST /withdrawals")]),t._v("), for general concern, it is still separated from wallet API into a\nstandalone permission group, while withdrawal history retrieving API stays inside wallet\noperations(i.e., "),s("code",[t._v("GET /wallet/withdrawals")]),t._v(").")]),t._v(" "),s("h2",{attrs:{id:"apiv4-signed-request-requirements"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#apiv4-signed-request-requirements"}},[t._v("#")]),t._v(" APIv4 signed request requirements")]),t._v(" "),s("ol",[s("li",[t._v("Generate APIv4 Key pairs in web console, and make sure it has the right permissions.")]),t._v(" "),s("li",[t._v("Set request header "),s("code",[t._v("KEY")]),t._v(" to the key.")]),t._v(" "),s("li",[t._v("Set request header "),s("code",[t._v("Timestamp")]),t._v(" to current time formatted in Unix time in seconds. Pay\nattention that the gap between its value and current time cannot exceed 60 seconds.")]),t._v(" "),s("li",[t._v("Set request header "),s("code",[t._v("SIGN")]),t._v(" to encrypted request signature. Refer to next section for\nhow signature string is generated. Signature generation method is\n"),s("code",[t._v("HexEncode(HMAC_SHA512(secret, signature_string))")]),t._v(", i.e., the hexadecimal digest output\nof HMAC-SHA512 with APIv4 secret as secret and signature string as message,")]),t._v(" "),s("li",[t._v("Make sure request client's IP is in your APIv4 Key's IP whitelist.")])]),t._v(" "),s("h2",{attrs:{id:"api-signature-string-generation"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#api-signature-string-generation"}},[t._v("#")]),t._v(" API Signature string generation")]),t._v(" "),s("p",[t._v("In APIv4, signature string is concatenated as the following way:")]),t._v(" "),s("p",[s("code",[t._v('Request Method + "\\n" \t+ Request URL + "\\n" \t+ Query String + "\\n" \t+ HexEncode(SHA512(Request Payload)) + "\\n" \t+ Timestamp')])]),t._v(" "),s("h3",{attrs:{id:"request-method"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#request-method"}},[t._v("#")]),t._v(" Request Method")]),t._v(" "),s("p",[t._v("Request method in UPPERCASE, e.g. "),s("code",[t._v("POST")]),t._v(", "),s("code",[t._v("GET")])]),t._v(" "),s("h3",{attrs:{id:"request-url"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#request-url"}},[t._v("#")]),t._v(" Request URL")]),t._v(" "),s("p",[t._v("Request url. Protocol, host and port are not included, e.g. "),s("code",[t._v("/api/v4/futures/orders")])]),t._v(" "),s("h3",{attrs:{id:"query-string"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#query-string"}},[t._v("#")]),t._v(" Query String")]),t._v(" "),s("p",[t._v("Request query string without URL encode. query parameters order should be the\nsame as how they are concatenated in the request URL, e.g. "),s("code",[t._v("status=finished&limit=50")]),t._v('. Use empty string("") if no query parameters.')]),t._v(" "),s("h3",{attrs:{id:"hexencode-sha512-request-payload"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hexencode-sha512-request-payload"}},[t._v("#")]),t._v(" HexEncode(SHA512(Request Payload))")]),t._v(" "),s("p",[t._v("Hash the request body with SHA512 and output its Hex encoded form. If no request body, use empty string's hashed result, i.e.\n"),s("code",[t._v("cf83e1357eefb8bdf1542850d66d8007d620e4050b5715dc83f4a921d36ce9ce47d0d13c5d85f2b0ff8318d2877eec2f63b931bd47417a81a538327af927da3e")])]),t._v(" "),s("h3",{attrs:{id:"timestamp"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#timestamp"}},[t._v("#")]),t._v(" Timestamp")]),t._v(" "),s("p",[s("code",[t._v("Timestamp")]),t._v(" request header value.")]),t._v(" "),s("blockquote",[s("p",[t._v("Examples")])]),t._v(" "),s("blockquote",[s("p",[t._v("Note: all example signature string are broken into multiple lines for displaying purpose only.\nOnly the "),s("code",[t._v("\\n")]),t._v(" character in signature string is reserved in reality.")])]),t._v(" "),s("blockquote",[s("p",[t._v("Suppose the key we used is "),s("code",[t._v("key")]),t._v(", while the secret is "),s("code",[t._v("secret")]),t._v(".")])]),t._v(" "),s("blockquote",[s("ol",[s("li",[t._v("List all orders")])])]),t._v(" "),s("div",{staticClass:"language-http extra-class"},[s("pre",{pre:!0,attrs:{class:"language-http"}},[s("code",[t._v("\tGET /api/v4/futures/orders?contract=BTC_USD&status=finished&limit=50 HTTP/1.1\n")])])]),s("blockquote",[s("p",[t._v("Signature string：")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("\tGET\\n\n\t/api/v4/futures/orders\\n\n\tcontract=BTC_USD&status=finished&limit=50\\n\n\tcf83e1357eefb8bdf1542850d66d8007d620e4050b5715dc83f4a921d36ce9ce47d0d13c5d85f2b0ff8318d2877eec2f63b931bd47417a81a538327af927da3e\\n\n\t1541993715\n")])])]),s("blockquote",[s("p",[t._v("Explanation：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("/api/v4/futures/orders")]),t._v(": request url")]),t._v(" "),s("li",[s("code",[t._v("contract=BTC_USD&status=finished&limit=50")]),t._v(": keep the query string as it is in the request url")]),t._v(" "),s("li",[t._v("request body use empty string's hashed result")]),t._v(" "),s("li",[s("code",[t._v("1541993715")]),t._v(": Unix timestamp in seconds")])])]),t._v(" "),s("blockquote",[s("p",[t._v("Signature generated")]),t._v(" "),s("p",[s("code",[t._v("55f84ea195d6fe57ce62464daaa7c3c02fa9d1dde954e4c898289c9a2407a3d6fb3faf24deff16790d726b66ac9f74526668b13bd01029199cc4fcc522418b8a")])])]),t._v(" "),s("blockquote",[s("ol",{attrs:{start:"2"}},[s("li",[t._v("Create an order")])])]),t._v(" "),s("div",{staticClass:"language-http extra-class"},[s("pre",{pre:!0,attrs:{class:"language-http"}},[s("code",[t._v('\tPOST /api/v4/futures/orders HTTP/1.1\n\n\t{"contract":"BTC_USD","type":"limit","size":100,"price":6800,"time_in_force":"gtc"}\n')])])]),s("blockquote",[s("p",[t._v("Signature string：")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("\tPOST\\n\n\t/api/v4/futures/orders\\n\n\t\\n\n\tad3c169203dc3026558f01b4df307641fa1fa361f086b2306658886d5708767b1854797c68d9e62fef2f991645aa82673622ebf417e091d0bd22bafe5d956cca\\n\n\t1541993715\n")])])]),s("blockquote",[s("p",[t._v("Explanation：")]),t._v(" "),s("ul",[s("li",[t._v("request query string is empty, use plain empty string")]),t._v(" "),s("li",[t._v("use the hashed result of the json-string-formatted request body")])])]),t._v(" "),s("blockquote",[s("p",[t._v("Signature generated")]),t._v(" "),s("p",[s("code",[t._v("eae42da914a590ddf727473aff25fc87d50b64783941061f47a3fdb92742541fc4c2c14017581b4199a1418d54471c269c03a38d788d802e2c306c37636389f0")])])]),t._v(" "),s("Example",[s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# example authentication implementation in Python")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v('"""\nPython SDK is recommended as it has already implemented the authentication process for every API:\n"""')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" time\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" hashlib\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" hmac\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" requests\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" json\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("gen_sign")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("method"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" url"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" query_string"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" payload_string"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    key "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),t._v("        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# api_key")]),t._v("\n    secret "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),t._v("     "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# api_secret")]),t._v("\n\n    t "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    m "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" hashlib"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sha512"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    m"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("update"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("payload_string "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("or")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("encode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'utf-8'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    hashed_payload "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" m"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("hexdigest"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    s "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'%s\\n%s\\n%s\\n%s\\n%s'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("method"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" url"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" query_string "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("or")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" hashed_payload"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    sign "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" hmac"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("new"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("secret"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("encode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'utf-8'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("encode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'utf-8'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" hashlib"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sha512"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("hexdigest"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'KEY'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Timestamp'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("str")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'SIGN'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" sign"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" __name__ "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"__main__"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    host "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://api.gateio.ws"')]),t._v("\n    prefix "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/api/v4"')]),t._v("\n    common_headers "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Accept'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'application/json'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Content-Type'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'application/json'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    url "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/futures/orders'")]),t._v("\n    body "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"contract"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"BTC_USD"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"size"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"price"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"30"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"tif"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"gtc"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    request_content "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" json"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dumps"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("body"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    sign_headers "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" gen_sign"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'POST'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" prefix "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" url"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" request_content"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    sign_headers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("update"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("common_headers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'signature headers: %s'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" sign_headers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    res "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" requests"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("post"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("host "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" prefix "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" url"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" headers"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("sign_headers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" data"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("request_content"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("res"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("status_code"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("res"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("content"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])],1)],1)}),[],!1,null,null,null);e.default=n.exports}}]);